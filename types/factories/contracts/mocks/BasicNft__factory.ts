/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BasicNft,
  BasicNftInterface,
} from "../../../contracts/mocks/BasicNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "NFTMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasReachedCap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setRoyalties",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001dea38038062001dea83398101604081905262000034916200020f565b604080518082018252600580825264544945523160d81b6020808401829052845180860190955291845290830152906000620000718382620002f0565b506001620000808282620002f0565b5050506200009d62000097620000bf60201b60201c565b620000c3565b6001600755620000b0826109c462000115565b600160085560805250620003bc565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200011f620001b1565b620186a0811115620001785760405162461bcd60e51b815260206004820152601a60248201527f45524332393831526f79616c746965733a20546f6f206869676800000000000060448201526064015b60405180910390fd5b604080518082019091526001600160a01b039092168083526020909201819052600980546001600160a01b031916909217909155600a55565b6006546001600160a01b031633146200020d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200016f565b565b600080604083850312156200022357600080fd5b82516001600160a01b03811681146200023b57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200027657607f821691505b6020821081036200029757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002eb57600081815260208120601f850160051c81016020861015620002c65750805b601f850160051c820191505b81811015620002e757828155600101620002d2565b5050505b505050565b81516001600160401b038111156200030c576200030c6200024b565b62000324816200031d845462000261565b846200029d565b602080601f8311600181146200035c5760008415620003435750858301515b600019600386901b1c1916600185901b178555620002e7565b600085815260208120601f198616915b828110156200038d578886015182559484019460019091019084016200036c565b5085821015620003ac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611a0b620003df6000396000818161032101526106da0152611a0b6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063715018a6116100e3578063b88d4fde1161008c578063e985e9c511610066578063e985e9c514610343578063e9c2e14b1461037f578063f2fde38b1461039257600080fd5b8063b88d4fde146102f6578063c87b56dd14610309578063d5abeb011461031c57600080fd5b80638da5cb5b116100bd5780638da5cb5b146102ca57806395d89b41146102db578063a22cb465146102e357600080fd5b8063715018a6146102a757806378ce9035146102af5780638c7ea24b146102b757600080fd5b80632a55205a116101455780636352211e1161011f5780636352211e1461026f5780636e02007d1461028257806370a082311461029457600080fd5b80632a55205a1461022257806342842e0e14610254578063462cce481461026757600080fd5b8063081812fc11610176578063081812fc146101cf578063095ea7b3146101fa57806323b872dd1461020f57600080fd5b806301ffc9a71461019257806306fdde03146101ba575b600080fd5b6101a56101a03660046115b8565b6103a5565b60405190151581526020015b60405180910390f35b6101c26103e9565b6040516101b19190611622565b6101e26101dd366004611635565b61047b565b6040516001600160a01b0390911681526020016101b1565b61020d61020836600461166a565b6104a2565b005b61020d61021d366004611694565b6105f6565b6102356102303660046116d0565b61066d565b604080516001600160a01b0390931683526020830191909152016101b1565b61020d610262366004611694565b6106b8565b6101a56106d3565b6101e261027d366004611635565b61070a565b6008545b6040519081526020016101b1565b6102866102a23660046116f2565b61076f565b61020d610809565b6101c261081d565b61020d6102c536600461166a565b610839565b6006546001600160a01b03166101e2565b6101c26108cd565b61020d6102f136600461170d565b6108dc565b61020d61030436600461175f565b6108eb565b6101c2610317366004611635565b610969565b6102867f000000000000000000000000000000000000000000000000000000000000000081565b6101a561035136600461183b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61020d61038d3660046116f2565b610a15565b61020d6103a03660046116f2565b610acd565b60006001600160e01b031982167f2a55205a0000000000000000000000000000000000000000000000000000000014806103e357506103e382610b5a565b92915050565b6060600080546103f89061186e565b80601f01602080910402602001604051908101604052809291908181526020018280546104249061186e565b80156104715780601f1061044657610100808354040283529160200191610471565b820191906000526020600020905b81548152906001019060200180831161045457829003601f168201915b5050505050905090565b600061048682610bf5565b506000908152600460205260409020546001600160a01b031690565b60006104ad8261070a565b9050806001600160a01b0316836001600160a01b03160361053b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061057557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105e75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610532565b6105f18383610c59565b505050565b6106003382610cc7565b6106625760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610532565b6105f1838383610d46565b604080518082019091526009546001600160a01b0316808252600a54602083018190529091600091620186a0906106a490866118be565b6106ae91906118dd565b9150509250929050565b6105f1838383604051806020016040528060008152506108eb565b60006008547f0000000000000000000000000000000000000000000000000000000000000000106107045750600190565b50600090565b6000818152600260205260408120546001600160a01b0316806103e35760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610532565b60006001600160a01b0382166107ed5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610532565b506001600160a01b031660009081526003602052604090205490565b610811610f4c565b61081b6000610fa6565b565b60405180608001604052806057815260200161197f6057913981565b610841610f4c565b620186a08111156108945760405162461bcd60e51b815260206004820152601a60248201527f45524332393831526f79616c746965733a20546f6f20686967680000000000006044820152606401610532565b604080518082019091526001600160a01b039092168083526020909201819052600980546001600160a01b031916909217909155600a55565b6060600180546103f89061186e565b6108e7338383610ff8565b5050565b6108f53383610cc7565b6109575760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608401610532565b610963848484846110c6565b50505050565b6000818152600260205260409020546060906001600160a01b03166109f65760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610532565b60405180608001604052806057815260200161197f6057913992915050565b610a1d610f4c565b610a25611144565b610a2d6106d3565b15610a64576040517fd05cb60900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a708160085461119d565b6008546040516001600160a01b03831681527f0176f203df400d7bd5f1b1c9ef36c16709bf3b5d9fd35f000a6bae32393f66c39060200160405180910390a2600854610abd9060016118ff565b600855610aca6001600755565b50565b610ad5610f4c565b6001600160a01b038116610b515760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610532565b610aca81610fa6565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480610bbd57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806103e357507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146103e3565b6000818152600260205260409020546001600160a01b0316610aca5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610532565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c8e8261070a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610cd38361070a565b9050806001600160a01b0316846001600160a01b03161480610d1a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d3e5750836001600160a01b0316610d338461047b565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d598261070a565b6001600160a01b031614610dbd5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610532565b6001600160a01b038216610e385760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610532565b610e4583838360016111b7565b826001600160a01b0316610e588261070a565b6001600160a01b031614610ebc5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610532565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b0316331461081b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610532565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610532565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110d1848484610d46565b6110dd8484848461123f565b6109635760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610532565b6002600754036111965760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610532565b6002600755565b6108e782826040518060200160405280600081525061138b565b6001811115610963576001600160a01b038416156111fd576001600160a01b038416600090815260036020526040812080548392906111f7908490611912565b90915550505b6001600160a01b03831615610963576001600160a01b038316600090815260036020526040812080548392906112349084906118ff565b909155505050505050565b60006001600160a01b0384163b1561138057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611283903390899088908890600401611925565b6020604051808303816000875af19250505080156112be575060408051601f3d908101601f191682019092526112bb91810190611961565b60015b611366573d8080156112ec576040519150601f19603f3d011682016040523d82523d6000602084013e6112f1565b606091505b50805160000361135e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610532565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d3e565b506001949350505050565b6113958383611409565b6113a2600084848461123f565b6105f15760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610532565b6001600160a01b03821661145f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610532565b6000818152600260205260409020546001600160a01b0316156114c45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610532565b6114d26000838360016111b7565b6000818152600260205260409020546001600160a01b0316156115375760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610532565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610aca57600080fd5b6000602082840312156115ca57600080fd5b81356115d5816115a2565b9392505050565b6000815180845260005b81811015611602576020818501810151868301820152016115e6565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006115d560208301846115dc565b60006020828403121561164757600080fd5b5035919050565b80356001600160a01b038116811461166557600080fd5b919050565b6000806040838503121561167d57600080fd5b6116868361164e565b946020939093013593505050565b6000806000606084860312156116a957600080fd5b6116b28461164e565b92506116c06020850161164e565b9150604084013590509250925092565b600080604083850312156116e357600080fd5b50508035926020909101359150565b60006020828403121561170457600080fd5b6115d58261164e565b6000806040838503121561172057600080fd5b6117298361164e565b91506020830135801515811461173e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561177557600080fd5b61177e8561164e565b935061178c6020860161164e565b925060408501359150606085013567ffffffffffffffff808211156117b057600080fd5b818701915087601f8301126117c457600080fd5b8135818111156117d6576117d6611749565b604051601f8201601f19908116603f011681019083821181831017156117fe576117fe611749565b816040528281528a602084870101111561181757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561184e57600080fd5b6118578361164e565b91506118656020840161164e565b90509250929050565b600181811c9082168061188257607f821691505b6020821081036118a257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156118d8576118d86118a8565b500290565b6000826118fa57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156103e3576103e36118a8565b818103818111156103e3576103e36118a8565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261195760808301846115dc565b9695505050505050565b60006020828403121561197357600080fd5b81516115d5816115a256fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122069850dc3f269dd97d61980f76ee44289d91a9d0a9e8d5308650cfda148c3e48564736f6c63430008100033";

type BasicNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicNft__factory extends ContractFactory {
  constructor(...args: BasicNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _receiver: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BasicNft> {
    return super.deploy(
      _receiver,
      _maxSupply,
      overrides || {}
    ) as Promise<BasicNft>;
  }
  override getDeployTransaction(
    _receiver: PromiseOrValue<string>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_receiver, _maxSupply, overrides || {});
  }
  override attach(address: string): BasicNft {
    return super.attach(address) as BasicNft;
  }
  override connect(signer: Signer): BasicNft__factory {
    return super.connect(signer) as BasicNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicNftInterface {
    return new utils.Interface(_abi) as BasicNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicNft {
    return new Contract(address, _abi, signerOrProvider) as BasicNft;
  }
}
