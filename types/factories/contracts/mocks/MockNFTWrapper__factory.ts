/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockNFTWrapper,
  MockNFTWrapperInterface,
} from "../../../contracts/mocks/MockNFTWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "underlyingNFTAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161046238038061046283398181016040528101906100329190610112565b61004c678e52ede330deefb460c01b6100ac60201b60201c565b610066675005834fae81292960c01b6100ac60201b60201c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b6103148061014e6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806370a0823114610030575b600080fd5b61004a600480360381019061004591906101a7565b610060565b60405161005791906101ed565b60405180910390f35b60006100766741b746af064a59a660c01b610141565b61008a67144ab3bf445c7f7860c01b610141565b61009e67b8c8181785b2f7dd60c01b610141565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e8360016040518363ffffffff1660e01b81526004016100f992919061025c565b602060405180830381865afa158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a91906102b1565b9050919050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061017482610149565b9050919050565b61018481610169565b811461018f57600080fd5b50565b6000813590506101a18161017b565b92915050565b6000602082840312156101bd576101bc610144565b5b60006101cb84828501610192565b91505092915050565b6000819050919050565b6101e7816101d4565b82525050565b600060208201905061020260008301846101de565b92915050565b61021181610169565b82525050565b6000819050919050565b6000819050919050565b600061024661024161023c84610217565b610221565b6101d4565b9050919050565b6102568161022b565b82525050565b60006040820190506102716000830185610208565b61027e602083018461024d565b9392505050565b61028e816101d4565b811461029957600080fd5b50565b6000815190506102ab81610285565b92915050565b6000602082840312156102c7576102c6610144565b5b60006102d58482850161029c565b9150509291505056fea2646970667358221220c76e5edeb7b0d5157e520d4bebcc0db01eaf91eb80c3c5fda4f4d176de1f81a664736f6c63430008100033";

type MockNFTWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockNFTWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockNFTWrapper__factory extends ContractFactory {
  constructor(...args: MockNFTWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    underlyingNFTAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockNFTWrapper> {
    return super.deploy(
      underlyingNFTAddress_,
      overrides || {}
    ) as Promise<MockNFTWrapper>;
  }
  override getDeployTransaction(
    underlyingNFTAddress_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(underlyingNFTAddress_, overrides || {});
  }
  override attach(address: string): MockNFTWrapper {
    return super.attach(address) as MockNFTWrapper;
  }
  override connect(signer: Signer): MockNFTWrapper__factory {
    return super.connect(signer) as MockNFTWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockNFTWrapperInterface {
    return new utils.Interface(_abi) as MockNFTWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockNFTWrapper {
    return new Contract(address, _abi, signerOrProvider) as MockNFTWrapper;
  }
}
