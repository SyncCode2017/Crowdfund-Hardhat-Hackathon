/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFundABusiness,
  IFundABusinessInterface,
} from "../../../contracts/interfaces/IFundABusiness";

const _abi = [
  {
    inputs: [],
    name: "CampaignEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "CampaignNotOpen",
    type: "error",
  },
  {
    inputs: [],
    name: "CampaignUnsuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "FractionTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "FunderHasClaimedNft",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTier",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidValues",
    type: "error",
  },
  {
    inputs: [],
    name: "NeedMoreTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "NftTokensNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFundDue",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMultipleFunding",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRefund",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAFunder",
    type: "error",
  },
  {
    inputs: [],
    name: "NotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TooLateToChange",
    type: "error",
  },
  {
    inputs: [],
    name: "TransactionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Undecided",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
    ],
    name: "ContributionReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
    ],
    name: "ContributionRefunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FiatContributionReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "business",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "FundReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tier",
        type: "uint256",
      },
    ],
    name: "NFTRewardClaimed",
    type: "event",
  },
] as const;

export class IFundABusiness__factory {
  static readonly abi = _abi;
  static createInterface(): IFundABusinessInterface {
    return new utils.Interface(_abi) as IFundABusinessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFundABusiness {
    return new Contract(address, _abi, signerOrProvider) as IFundABusiness;
  }
}
